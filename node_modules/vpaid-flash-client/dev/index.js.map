{"version":3,"sources":["node_modules/browser-pack/_prelude.js","demo/demo.js","js/VPAIDFLASHClient.js"],"names":[],"mappings":"AAAA;ACAA;;AAEA,IAAI,mBAAmB,QAAvB,AAAuB,AAAQ;;AAE/B,IAAI,aAAa,IAAA,AAAI,iBAAiB,SAAA,AAAS,eAA9B,AAAqB,AAAwB,cAA9D,AAAiB,AAA2D;;AAE5E,SAAA,AAAS,wBAAT,AAAiC,KAAK,AAClC;QAAA,AAAI,KAAK,AACT;AACA;AACA;AACA;QAAI,QAAJ,AAAY,AACZ;AACA;eAAA,AAAW,WAAX,AAAsB,OAAO,UAAA,AAAU,OAAV,AAAiB,QAAQ,AAClD;YAAA,AAAI,OAAO,AAEX;;eAAA,AAAO,iBAAP,AAAwB,OAAxB,AAA+B,AAC/B;eAAA,AAAO,GAAP,AAAU,YAAV,AAAsB,AAEtB;;eAAA,AAAO,GAAP,AAAU,aAAa,UAAA,AAAU,KAAV,AAAe,QAAQ,AAC1C;oBAAA,AAAQ,IAAR,AAAY,mBAAZ,AAA+B,KAA/B,AAAoC,AACpC;AACH;AAHD,AAIA;gBAAA,AAAQ,IAAR,AAAY,AAEZ;;iBAAA,AAAS,OAAT,AAAgB,KAAhB,AAAqB,QAAQ,AACzB;oBAAA,AAAQ,IAAR,AAAY,aAAZ,AAAyB,KAAzB,AAA8B,AAC9B;mBAAA,AAAO,OAAP,AAAc,KAAd,AAAmB,KAAnB,AAAwB,UAAU,CAAlC,AAAmC,GAAnC,AAAsC,IAAtC,AAA0C,IAAI,UAAA,AAAU,KAAK,AACzD;wBAAA,AAAQ,IAAR,AAAY,UAAZ,AAAsB,AACzB;AAFD,AAGH;AAED;;iBAAA,AAAS,QAAT,AAAiB,KAAjB,AAAsB,QAAQ,AAC1B;oBAAA,AAAQ,IAAR,AAAY,kBAAZ,AAA8B,KAA9B,AAAmC,AACnC;mBAAA,AAAO,QAAQ,UAAA,AAAU,KAAV,AAAe,QAAQ,AAClC;wBAAA,AAAQ,IAAR,AAAY,gBAAZ,AAA4B,KAA5B,AAAiC,AACpC;AAFD,AAGH;AAED;;iBAAA,AAAS,oBAAoB,AACzB;mBAAA,AAAO,WAAW,UAAA,AAAU,KAAV,AAAe,QAAQ,AACrC;wBAAA,AAAQ,IAAR,AAAY,cAAZ,AAA0B,AAC7B;AAFD,AAGA;mBAAA,AAAO,YAAP,AAAmB,IAAI,UAAA,AAAU,KAAV,AAAe,QAAQ,AAC1C;wBAAA,AAAQ,IAAR,AAAY,eAAZ,AAA2B,AAE3B;;2BAAW,YAAY,AACnB;2BAAA,AAAO,YAAP,AAAmB,AACtB;AAFD,mBAAA,AAEG,AAGH;;2BAAW,YAAY,AACnB;2BAAA,AAAO,YAAP,AAAmB,AACtB;AAFD,mBAAA,AAEG,AACN;AAXD,AAYA;mBAAA,AAAO,YAAY,UAAA,AAAU,KAAV,AAAe,QAAQ,AACtC;wBAAA,AAAQ,IAAR,AAAY,eAAZ,AAA2B,AAC9B;AAFD,AAGH;AAEJ;AA/CD,AAgDH;;;;AC7DD;;AAEA,AACA;;;;IAAA,AAAM,AAAiB;;;;AAIvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA,OAAA,AAAO,UAAP,AAAiB","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar VPAIDFLASHClient = require('../js/VPAIDFLASHClient');\n\nvar flashVPaid = new VPAIDFLASHClient(document.getElementById('myContent'), flashVPAIDWrapperLoaded);\n\nfunction flashVPAIDWrapperLoaded(err) {\n    if (err) return;\n    // var adURL = 'http://cdn.innovid.com/2.62.8110/platform/vpaid/VPAIDIRollPackage.swf?configURL=http%3A%2F%2Fstatic.innovid.com%2Firoll%2Fconfig%2F1hl7lc.xml%3Fcb%3D787766d7-ebab-3656-c24f-0ddebab645e9&secure=false';\n    // var adURL = 'VPAIDIRollPackage.swf?configURL=http%3A%2F%2Fstatic.innovid.com%2Firoll%2Fconfig%2F1hl7lc.xml%3Fcb%3D787766d7-ebab-3656-c24f-0ddebab645e9&secure=false';\n    // var adURL = 'TestAd.swf';\n    var adURL = 'http://cdn-sys.brainient.com/flash/v6/select846.swf?video_id=a3f30b8e-2ad8-4123-bc58-42fccb3e48cd&user_id=1228&tzone=&settings=json&settingsPath=http://cdn-tags.brainient.com/1228/a3f30b8e-2ad8-4123-bc58-42fccb3e48cd/config.json';\n    // var adURL = 'http://shim.btrll.com/shim/20150715.85603_master/Scout.swf?asset_64=aHR0cDovL2NhY2hlLmJ0cmxsLmNvbS9wcm9kdWN0L3Rlc3QvdmFzdF93cmFwcGVyL2JyLXZhc3Rfd3JhcHBlci54bWw&vid_click_url=&h_64=YnJ4c2Vydi0yMi5idHJsbC5jb20&e=p&config_url_64=&type=VAST_TAG&vh_64=bWhleHQtMjIuYnRybGwuY29t&p=6834995&s=3863356&l=28043&ic=51223&ii=6594&x=TbBvLqwwDICcRVsPZkAABtiwAAyBcAOvM8AAAAAABhtJT2o-vMJQ&cx=&dn=&hidefb=true&iq=t&adc=false&si=&t=33&apep=0.03&hbp=0.01&epx=&ps=0.0&view=vast2&woid=____________________________________';\n    flashVPaid.loadAdUnit(adURL, function (error, adUnit) {\n        if (error) return;\n\n        adUnit.handshakeVersion('2.0', initAd);\n        adUnit.on('AdLoaded', startAd);\n\n        adUnit.on('AdStarted', function (err, result) {\n            console.log('event:AdStarted', err, result);\n            checkAdProperties();\n        });\n        console.log('adUnitLoaded');\n\n        function initAd(err, result) {\n            console.log('handShake', err, result);\n            adUnit.initAd(800, 400, 'normal', -1, '', '', function (err) {\n                console.log('initAd', err);\n            });\n        }\n\n        function startAd(err, result) {\n            console.log('event:AdLoaded', err, result);\n            adUnit.startAd(function (err, result) {\n                console.log('startAd call', err, result);\n            });\n        }\n\n        function checkAdProperties() {\n            adUnit.getAdIcons(function (err, result) {\n                console.log('getAdIcons', result);\n            });\n            adUnit.setAdVolume(.8, function (err, result) {\n                console.log('setAdVolume', result);\n\n                setTimeout(function () {\n                    adUnit.setAdVolume(0);\n                }, 2000);\n\n\n                setTimeout(function () {\n                    adUnit.setAdVolume(1);\n                }, 5000);\n            });\n            adUnit.getAdVolume(function (err, result) {\n                console.log('getAdVolume', result);\n            });\n        }\n\n    });\n}\n","'use strict';\n\n//const swfobject = require('swfobject');\nclass VPAIDFLASHClient {\n}\n\n\n/*\nconst JSFlashBridge = require('./jsFlashBridge').JSFlashBridge;\nconst VPAIDAdUnit = require('./VPAIDAdUnit').VPAIDAdUnit;\n\nconst noop = require('./utils').noop;\nconst callbackTimeout = require('./utils').callbackTimeout;\nconst isPositiveInt = require('./utils').isPositiveInt;\nconst createElementWithID = require('./utils').createElementWithID;\nconst uniqueVPAID = require('./utils').unique('vpaid');\nconst createFlashTester = require('./flashTester.js').createFlashTester;\n\nconst ERROR = 'error';\nconst FLASH_VERSION = '10.1.0';\n\nlet flashTester = {isSupported: ()=> true}; // if the runFlashTest is not run the flashTester will always return true\n\nclass VPAIDFLASHClient {\n    constructor (vpaidParentEl, callback, swfConfig = {data: 'VPAIDFlash.swf', width: 800, height: 400}, params = { wmode: 'transparent', salign: 'tl', align: 'left', allowScriptAccess: 'always', scale: 'noScale', allowFullScreen: 'true', quality: 'high'}, vpaidOptions = { debug: false, timeout: 10000 }) {\n\n        var me = this;\n\n        this._vpaidParentEl = vpaidParentEl;\n        this._flashID = uniqueVPAID();\n        this._destroyed = false;\n        callback = callback || noop;\n\n        swfConfig.width = isPositiveInt(swfConfig.width, 800);\n        swfConfig.height = isPositiveInt(swfConfig.height, 400);\n\n        createElementWithID(vpaidParentEl, this._flashID, true);\n\n        params.movie = swfConfig.data;\n        params.FlashVars = `flashid=${this._flashID}&handler=${JSFlashBridge.VPAID_FLASH_HANDLER}&debug=${vpaidOptions.debug}&salign=${params.salign}`;\n\n        if (!VPAIDFLASHClient.isSupported()) {\n            return onError('user don\\'t support flash or doesn\\'t have the minimum required version of flash ' + FLASH_VERSION);\n        }\n\n        this.el = swfobject.createSWF(swfConfig, params, this._flashID);\n\n        if (!this.el) {\n            return onError( 'swfobject failed to create object in element' );\n        }\n\n        var handler = callbackTimeout(vpaidOptions.timeout,\n            (err, data) => {\n                $loadPendedAdUnit.call(this);\n                callback(err, data);\n            }, () => {\n                callback('vpaid flash load timeout ' + vpaidOptions.timeout);\n            }\n        );\n\n        this._flash = new JSFlashBridge(this.el, swfConfig.data, this._flashID, swfConfig.width, swfConfig.height, handler);\n\n        function onError(error) {\n            setTimeout(() => {\n                callback(new Error(error));\n            }, 0);\n            return me;\n        }\n\n    }\n\n    destroy () {\n        this._destroyAdUnit();\n\n        if (this._flash) {\n            this._flash.destroy();\n            this._flash = null;\n        }\n        this.el = null;\n        this._destroyed = true;\n    }\n\n    isDestroyed () {\n        return this._destroyed;\n    }\n\n    _destroyAdUnit() {\n        delete this._loadLater;\n\n        if (this._adUnitLoad) {\n            this._adUnitLoad = null;\n            this._flash.removeCallback(this._adUnitLoad);\n        }\n\n        if (this._adUnit) {\n            this._adUnit._destroy();\n            this._adUnit = null;\n        }\n    }\n\n    loadAdUnit(adURL, callback) {\n        $throwIfDestroyed.call(this);\n\n        if (this._adUnit) {\n            this._destroyAdUnit();\n        }\n\n        if (this._flash.isReady()) {\n            this._adUnitLoad = (err, message) => {\n                if (!err) {\n                    this._adUnit = new VPAIDAdUnit(this._flash);\n                }\n                this._adUnitLoad = null;\n                callback(err, this._adUnit);\n            };\n\n            this._flash.callFlashMethod('loadAdUnit', [adURL], this._adUnitLoad);\n        }else {\n            this._loadLater = {url: adURL, callback};\n        }\n    }\n\n    unloadAdUnit(callback = undefined) {\n        $throwIfDestroyed.call(this);\n\n        this._destroyAdUnit();\n        this._flash.callFlashMethod('unloadAdUnit', [], callback);\n    }\n    getFlashID() {\n        $throwIfDestroyed.call(this);\n        return this._flash.getFlashID();\n    }\n    getFlashURL() {\n        $throwIfDestroyed.call(this);\n        return this._flash.getFlashURL();\n    }\n\t\n}\n\nsetStaticProperty('isSupported', () => {\n    return swfobject.hasFlashPlayerVersion(FLASH_VERSION) && flashTester.isSupported();\n}, true);\n\nsetStaticProperty('runFlashTest', (swfConfig) => {\n    flashTester = createFlashTester(document.body, swfConfig);\n});\n\nfunction $throwIfDestroyed() {\n    if(this._destroyed) {\n        throw new Error('VPAIDFlashToJS is destroyed!');\n    }\n}\n\nfunction $loadPendedAdUnit() {\n    if (this._loadLater) {\n        this.loadAdUnit(this._loadLater.url, this._loadLater.callback);\n        delete this._loadLater;\n    }\n}\n\nfunction setStaticProperty(propertyName, value, writable = false) {\n    Object.defineProperty(VPAIDFLASHClient, propertyName, {\n        writable: writable,\n        configurable: false,\n        value: value\n    });\n}\n\nVPAIDFLASHClient.swfobject = swfobject;\n*/\nmodule.exports = VPAIDFLASHClient;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}