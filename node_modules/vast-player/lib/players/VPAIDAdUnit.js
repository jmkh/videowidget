'use strict';
var inherits = require('util').inherits;

var IVPAIDAdUnit = require('./IVPAIDAdUnit').IVPAIDAdUnit;
/*
 var ALL_VPAID_METHODS = Object.getOwnPropertyNames(IVPAIDAdUnit.prototype).filter(function (property) {
 return ['constructor'].indexOf(property) === -1;});
 */
function VPAIDAdUnit(flash) {
    //super();
    this._destroyed = false;
    this._flash = flash;

    this.handshakeVersion = function (playerVPAIDVersion, callback) {
        this._flash.callFlashMethod('handshakeVersion', [playerVPAIDVersion], callback);
    };
    this.initAd = function (width, height, viewMode, desiredBitrate, creativeData, environmentVars, callback) {
        creativeData = creativeData || {AdParameters: ''};
        environmentVars = environmentVars || {flashVars: ''};
        ////resize element that has the flash object
        this._flash.setSize(width, height);
        creativeData = creativeData || {AdParameters: ''};
        environmentVars = environmentVars || {flashVars: ''};
        this._flash.callFlashMethod('initAd', [this._flash.getWidth(), this._flash.getHeight(), viewMode, desiredBitrate, creativeData.AdParameters || '', environmentVars.flashVars || ''], callback);

    };
    this.setAdVolume = function (volume, callback) {
        this._flash.callFlashMethod('setAdVolume', [volume], callback);
    }
    this.getAdVolume = function (callback) {
        this._flash.callFlashMethod('getAdVolume', [], callback);
    }
    this.startAd = function (callback) {
        this._flash.callFlashMethod('startAd', [], callback);
    };
    this.on = function (eventName, callback) {

        this._flash.on(eventName, callback);
    };
//properties that will be treat as async methods
    this.getAdLinear = function (callback) {
        this._flash.callFlashMethod('getAdLinear', [], callback);
    }
    this.getAdWidth = function (callback) {
        this._flash.callFlashMethod('getAdWidth', [], callback);
    }
    this.getAdHeight = function (callback) {
        this._flash.callFlashMethod('getAdHeight', [], callback);
    }
    this.getAdExpanded = function (callback) {
        this._flash.callFlashMethod('getAdExpanded', [], callback);
    }
    this.getAdSkippableState = function (callback) {
        this._flash.callFlashMethod('getAdSkippableState', [], callback);
    }
    this.getAdRemainingTime = function (callback) {
        this._flash.callFlashMethod('getAdRemainingTime', [], callback);
    }
    this.getAdDuration = function (callback) {
        this._flash.callFlashMethod('getAdDuration', [], callback);
    }
    this.getAdCompanions = function (callback) {
        this._flash.callFlashMethod('getAdCompanions', [], callback);
    }
    this.getAdIcons = function (callback) {
        this._flash.callFlashMethod('getAdIcons', [], callback);
    };
};
//
//VPAIDAdUnit.prototype.handshakeVersion = function(playerVPAIDVersion , callback) {
//        this._flash.callFlashMethod('handshakeVersion', [playerVPAIDVersion], callback);
// };
//VPAIDAdUnit.prototype.initAd =function(width, height, viewMode, desiredBitrate, creativeData, environmentVars , callback ) {
//creativeData = creativeData  || {AdParameters: ''};
//environmentVars = environmentVars || {flashVars: ''};
//        ////resize element that has the flash object
//        this._flash.setSize(width, height);
//		creativeData = creativeData || {AdParameters: ''};
//		environmentVars = environmentVars || {flashVars: ''};
//		this._flash.callFlashMethod('initAd', [this._flash.getWidth(), this._flash.getHeight(), viewMode, desiredBitrate, creativeData.AdParameters || '', environmentVars.flashVars || ''], callback);
//
//    };
//VPAIDAdUnit.prototype.setAdVolume = function(volume, callback) {
//        this._flash.callFlashMethod('setAdVolume', [volume], callback);
//    }
//VPAIDAdUnit.prototype.getAdVolume = function(callback) {
//        this._flash.callFlashMethod('getAdVolume', [], callback);
//    }
//VPAIDAdUnit.prototype.startAd=function(callback) {
//    this._flash.callFlashMethod('startAd', [], callback);
//};
//VPAIDAdUnit.prototype.on=function(eventName, callback) {
//
//        this._flash.on(eventName, callback);
//    };
////properties that will be treat as async methods
//VPAIDAdUnit.prototype.getAdLinear=function(callback) {
//    this._flash.callFlashMethod('getAdLinear', [], callback);
//}
//VPAIDAdUnit.prototype.getAdWidth=function(callback) {
//    this._flash.callFlashMethod('getAdWidth', [], callback);
//}
//VPAIDAdUnit.prototype.getAdHeight=function(callback) {
//    this._flash.callFlashMethod('getAdHeight', [], callback);
//}
//VPAIDAdUnit.prototype.getAdExpanded=function(callback) {
//    this._flash.callFlashMethod('getAdExpanded', [], callback);
//}
//VPAIDAdUnit.prototype.getAdSkippableState=function(callback) {
//    this._flash.callFlashMethod('getAdSkippableState', [], callback);
//}
//VPAIDAdUnit.prototype.getAdRemainingTime=function(callback) {
//    this._flash.callFlashMethod('getAdRemainingTime', [], callback);
//}
//VPAIDAdUnit.prototype.getAdDuration=function(callback) {
//    this._flash.callFlashMethod('getAdDuration', [], callback);
//}
//VPAIDAdUnit.prototype.getAdCompanions=function(callback) {
//    this._flash.callFlashMethod('getAdCompanions', [], callback);
//}
//VPAIDAdUnit.prototype.getAdIcons=function(callback) {
//    this._flash.callFlashMethod('getAdIcons', [], callback);
//};
inherits(VPAIDAdUnit, IVPAIDAdUnit);
module.exports.VPAIDAdUnit = VPAIDAdUnit;
/*
 class VPAIDAdUnit extends IVPAIDAdUnit {
 constructor (flash) {
 super();
 this._destroyed = false;
 this._flash = flash;
 }

 _destroy() {
 this._destroyed = true;
 ALL_VPAID_METHODS.forEach((methodName) => {
 this._flash.removeCallbackByMethodName(methodName);
 });
 IVPAIDAdUnit.EVENTS.forEach((event) => {
 this._flash.offEvent(event);
 });

 this._flash = null;
 }

 isDestroyed () {
 return this._destroyed;
 }



 off(eventName, callback) {
 this._flash.off(eventName, callback);
 }

 //VPAID interface
 handshakeVersion(playerVPAIDVersion = '2.0', callback = undefined) {
 this._flash.callFlashMethod('handshakeVersion', [playerVPAIDVersion], callback);
 }
 initAd (width, height, viewMode, desiredBitrate, creativeData = {AdParameters: ''}, environmentVars = {flashVars: ''}, callback = undefined) {
 //resize element that has the flash object
 this._flash.setSize(width, height);
 creativeData = creativeData || {AdParameters: ''};
 environmentVars = environmentVars || {flashVars: ''};

 this._flash.callFlashMethod('initAd', [this._flash.getWidth(), this._flash.getHeight(), viewMode, desiredBitrate, creativeData.AdParameters || '', environmentVars.flashVars || ''], callback);
 }
 resizeAd(width, height, viewMode, callback = undefined) {
 //resize element that has the flash object
 this._flash.setSize(width, height);

 //resize ad inside the flash
 this._flash.callFlashMethod('resizeAd', [this._flash.getWidth(), this._flash.getHeight(), viewMode], callback);
 }
 startAd(callback = undefined) {
 this._flash.callFlashMethod('startAd', [], callback);
 }
 stopAd(callback = undefined) {
 this._flash.callFlashMethod('stopAd', [], callback);
 }
 pauseAd(callback = undefined) {
 this._flash.callFlashMethod('pauseAd', [], callback);
 }
 resumeAd(callback = undefined) {
 this._flash.callFlashMethod('resumeAd', [], callback);
 }
 expandAd(callback = undefined) {
 this._flash.callFlashMethod('expandAd', [], callback);
 }
 collapseAd(callback = undefined) {
 this._flash.callFlashMethod('collapseAd', [], callback);
 }
 skipAd(callback = undefined) {
 this._flash.callFlashMethod('skipAd', [], callback);
 }

 //properties that will be treat as async methods
 getAdLinear(callback) {
 this._flash.callFlashMethod('getAdLinear', [], callback);
 }
 getAdWidth(callback) {
 this._flash.callFlashMethod('getAdWidth', [], callback);
 }
 getAdHeight(callback) {
 this._flash.callFlashMethod('getAdHeight', [], callback);
 }
 getAdExpanded(callback) {
 this._flash.callFlashMethod('getAdExpanded', [], callback);
 }
 getAdSkippableState(callback) {
 this._flash.callFlashMethod('getAdSkippableState', [], callback);
 }
 getAdRemainingTime(callback) {
 this._flash.callFlashMethod('getAdRemainingTime', [], callback);
 }
 getAdDuration(callback) {
 this._flash.callFlashMethod('getAdDuration', [], callback);
 }
 setAdVolume(volume, callback = undefined) {
 this._flash.callFlashMethod('setAdVolume', [volume], callback);
 }
 getAdVolume(callback) {
 this._flash.callFlashMethod('getAdVolume', [], callback);
 }
 getAdCompanions(callback) {
 this._flash.callFlashMethod('getAdCompanions', [], callback);
 }
 getAdIcons(callback) {
 this._flash.callFlashMethod('getAdIcons', [], callback);
 }
 }
 */
