'use strict';

function MultipleValuesRegistry() {
   this._registries = {};
};
    MultipleValuesRegistry.prototype.add =function(id, value) {
        if (!this._registries[id]) {
            this._registries[id] = [];
        }
        if (this._registries[id].indexOf(value) === -1) {
            this._registries[id].push(value);
        }
    };
    MultipleValuesRegistry.prototype.get =function(id) {
        return this._registries[id] || [];
    };
    MultipleValuesRegistry.prototype.filterKeys =function (handler) {
        return Object.keys(this._registries).filter(handler);
    };
    MultipleValuesRegistry.prototype.findByValue = function (value) {
            var keys = Object.keys(this._registries).filter(function(key){
            return this._registries[key].indexOf(value) !== -1;
        });

        return keys;
    };
    MultipleValuesRegistry.prototype.remove =  function(key, value) {
        if (!this._registries[key]) { return; }

        var index = this._registries[key].indexOf(value);

        if (index < 0) { return; }
        return this._registries[key].splice(index, 1);
    }
     MultipleValuesRegistry.prototype.removeByKey = function (id) {
        var old = this._registries[id];
        delete this._registries[id];
        return old;
    };
    MultipleValuesRegistry.prototype.removeByValue =function(value) {
        var keys = this.findByValue(value);
        return keys.map(function(key){
            return this.remove(key, value);
        });
    };
    MultipleValuesRegistry.prototype.removeAll = function() {
        var old = this._registries;
        this._registries = {};
        return old;
    };
    MultipleValuesRegistry.prototype.size  = function() {
        return Object.keys(this._registries).length;
    }


function SingleValueRegistry() {

        this._registries = {};
    };
    SingleValueRegistry.prototype.add = function (id, value) {
        this._registries[id] = value;
    };
    SingleValueRegistry.prototype.get = function (id) {
        return this._registries[id];
    };
    SingleValueRegistry.prototype.filterKeys = function (handler) {
        return Object.keys(this._registries).filter(handler);
    };
    SingleValueRegistry.prototype.findByValue =function (value) {
        var keys = Object.keys(this._registries).filter(function(key){
            return this._registries[key] === value;
        });

        return keys;
    };
    SingleValueRegistry.prototype.remove =function(id) {
        var old = this._registries[id];
        delete this._registries[id];
        return old;
    }
    SingleValueRegistry.prototype.removeByValue =function (value) {
        var keys = this.findByValue(value);
        return keys.map(function(key){
            return this.remove(key);
        });
    };
    SingleValueRegistry.prototype.removeAll = function() {
        var old = this._registries;
        this._registries = {};
        return old;
    };
    SingleValueRegistry.prototype.size=function() {
        return Object.keys(this._registries).length;
    };

module.exports.SingleValueRegistry = SingleValueRegistry;
module.exports.MultipleValuesRegistry = MultipleValuesRegistry;
