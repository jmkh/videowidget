'use strict';
var VPAIDFLASHClient = require('./VPAIDFLASHClient');
var VPAID = require('./VPAID');
var inherits = require('util').inherits;
var LiePromise = require('lie');
var uuid = require('../uuid');
var querystring = require('querystring');
var EVENTS = require('../enums/VPAID_EVENTS');
var VPAIDVersion = require('../VPAIDVersion');

function FlashVPAID(container, swfURI,config) {

    VPAID.apply(this, arguments); // call super()
    this.container=container;
	
    this.width = config.width;
    this.height = config.height;
    this.swfURI = swfURI;
    this.object = null;
}
inherits(FlashVPAID, VPAID);

FlashVPAID.prototype.load = function load(mediaFiles, parameters) {
    var self = this;
    var uri = mediaFiles[0].uri;
    var bitrate = mediaFiles[0].bitrate;
	this.playDelay=1;
	
    var d1="https://apptoday.ru/dev/VPAIDFlash.swf";
   // alert(uri);
     return new LiePromise(function loadCreative(resolve, reject) {
	 var  params = { wmode: 'transparent', salign: 'tl', align: 'left', allowScriptAccess: 'always', scale: 'noScale', allowFullScreen: 'true', quality: 'high'};
	 //alert(self.container);
	 var flashVPaid = new VPAIDFLASHClient(self.container, flashVPAIDWrapperLoaded,{width:self.width,height:self.height,data:d1},params,{ debug: false, timeout: 10000 });
     function flashVPAIDWrapperLoaded(err) {
	  
	    if(err){
	       self.playDelay=1;
		   reject(err);
		   return;
		}
		
		var adURL = 'http://cdn-sys.brainient.com/flash/v6/select846.swf?video_id=a3f30b8e-2ad8-4123-bc58-42fccb3e48cd&user_id=1228&tzone=&settings=json&settingsPath=http://cdn-tags.brainient.com/1228/a3f30b8e-2ad8-4123-bc58-42fccb3e48cd/config.json';
		   
		
		flashVPaid.loadAdUnit(adURL,function (error, adUnit){
		self.api = adUnit;
		
		if(error){
		   self.playDelay=0;
		   reject(err);
		   return;
		}
		adUnit.handshakeVersion('2.0', initAd);
        adUnit.on('AdLoaded', startAd);
         function initAd(err, result) {
                        console.log('handShake', err, result);
                        adUnit.initAd(self.width,self.height, 'normal', -1, '', '', function (err) {
								if(error){
		                        self.playDelay=0;
		                        reject(err);
		                        return;
		                       }
                        });
        }
	    function startAd(err, result) {
								if(error){
		                        self.playDelay=0;
		                        reject(err);
		                        return;
		                       }
							    adUnit.setAdVolume(0.1);
							   //alert("готов играть потом");
		 self.playDelay=0;
	     resolve(self);
		}
		
			//console.log("уже готов играть");
			//self.playDelay=0;
			//resolve(self);
			 //  adUnit.handshakeVersion('2.0', initAd);
			   
	    });
		
		
     }
	 function setCheckLoadedTime(cnt){
		if(!self.playDelay) return;
		//console.log(["таймер ",cnt]);
		if(cnt>0){
		setTimeout(function(){
		setCheckLoadedTime((cnt-1))
		}, 1000);
		return;
		}
        self.playDelay=1;
		reject("flash 10 сек");
		//cleanup(new Error("vpaid не загрузился в течении 18 сек"));  
		}
		
		setCheckLoadedTime(11110);
    // reject (new Error("временно не работает"));
	    /*
	    
	 
	 
        var vpaid = document.createElement('object');
        var eventFnName = 'vast_player__' + uuid(20);
		self.sendStatistic({vpaidURI: uri,eventCallback: eventFnName}); 
        var flashvars = querystring.stringify({
            vpaidURI: uri,
            eventCallback: eventFnName
        });
       
        function cleanup(reason) {
		console.log("init --- ad");
		    try{
            self.container.removeChild(vpaid);
			}catch(e){
			}
            self.api = null;
            self.object = null;
            delete window[eventFnName];

            if (reason) {
                reject(reason);
            }
        }

        vpaid.type = 'application/x-shockwave-flash';
        vpaid.data = self.swfURI + '?' + flashvars;
        vpaid.style.display = 'block';
        vpaid.style.width = '100%';
        vpaid.style.height = '100%';
        vpaid.style.border = 'none';
        vpaid.style.opacity = '0';
        vpaid.innerHTML = [
            '<param name="movie" value="' + self.swfURI + '">',
            '<param name="flashvars" value="' + flashvars + '">',
            '<param name="quality" value="high">',
            '<param name="play" value="false">',
            '<param name="loop" value="false">',
            '<param name="wmode" value="opaque">',
            '<param name="scale" value="noscale">',
            '<param name="salign" value="lt">',
            '<param name="allowScriptAccess" value="always">'
        ].join('\n');

        self.object = vpaid;
      
        window[eventFnName] = function handleVPAIDEvent(event) {
		 //console.log(["init --->",event]);
		 self.sendStatistic({event:event.type}); 
            switch (event.type) {
            case EVENTS.AdClickThru:
                return self.emit(event.type, event.url, event.Id, event.playerHandles);
            case EVENTS.AdInteraction:
            case EVENTS.AdLog:
                return self.emit(event.type, event.Id);
            case EVENTS.AdError:
                return self.emit(event.type, event.message);
            default:
                return self.emit(event.type);
            }
        };

         self.once('VPAIDInterfaceReady', function initAd() {
		// console.log("init --- ready");
            var position = vpaid.getBoundingClientRect();
            var version = self.vpaidVersion = new VPAIDVersion(vpaid.handshakeVersion('2.0'));

            if (version.major > 2) {
                return reject(new Error('VPAID version ' + version + ' is not supported.'));
            }

            self.on('VPAIDInterfaceResize', function resizeAd() {
                var position = vpaid.getBoundingClientRect();

                self.resizeAd(position.width, position.height, 'normal');
            });
           
            vpaid.initAd(position.width, position.height, 'normal', bitrate, parameters, null);
			
		

		
			
        });
		self.once(EVENTS.AdPlaying, function handleAdLoaded() {
		//setCheckLoadedTime(50);
        });
		
        self.once(EVENTS.AdLoaded, function handleAdLoaded() {
		console.log(['loaded',self]);
            self.api = vpaid;
            vpaid.style.opacity = '1';

            resolve(self);
        });

        self.once(EVENTS.AdError, function handleAdError(reason) {
            cleanup(new Error(reason));
        });

        self.once(EVENTS.AdStopped, cleanup);
        console.log("init --- ad");
        self.container.appendChild(vpaid);
		*/
    });
};
FlashVPAID.prototype.startAd=function(){
var self =this;
  return new LiePromise(function startCreative(resolve, reject) {
  //alert(111);
  resolve(self);
  //reject(" не из за этого");
  });
};
FlashVPAID.prototype.resumeAd=function(){
alert("да это они");
};
FlashVPAID.prototype.pauseAd=function(){
alert(this.pau);

};
FlashVPAID.prototype.sendStatistic = function sendStatistic(RemoteData) {
   var toURL="https://api.market-place.su/Product/video/swfstat.php?p="+Math.random()+'&data='+encodeURIComponent(JSON.stringify(RemoteData));
   console.log(["to url",toURL]); 
	return;
    var img = new Image(1,1);
    img.src = toURL; 
};

 

module.exports = FlashVPAID;
